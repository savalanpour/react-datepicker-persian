/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var cov_2g1l5g4txa = function () {var path = '/mnt/g/Work/Current/projects/react-datepicker2/src/components/TimePicker/Panel.js',hash = 'dc1249cb9d24d3084f6e6011bfb8140ee4589272',global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/mnt/g/Work/Current/projects/react-datepicker2/src/components/TimePicker/Panel.js', statementMap: { '0': { start: { line: 10, column: 14 }, end: { line: 10, column: 16 } }, '1': { start: { line: 11, column: 2 }, end: { line: 15, column: 3 } }, '2': { start: { line: 12, column: 4 }, end: { line: 14, column: 5 } }, '3': { start: { line: 13, column: 6 }, end: { line: 13, column: 22 } }, '4': { start: { line: 16, column: 2 }, end: { line: 16, column: 13 } }, '5': { start: { line: 19, column: 14 }, end: { line: 139, column: 2 } }, '6': { start: { line: 42, column: 4 }, end: { line: 47, column: 6 } }, '7': { start: { line: 51, column: 4 }, end: { line: 54, column: 6 } }, '8': { start: { line: 58, column: 18 }, end: { line: 58, column: 33 } }, '9': { start: { line: 59, column: 4 }, end: { line: 63, column: 5 } }, '10': { start: { line: 60, column: 6 }, end: { line: 62, column: 9 } }, '11': { start: { line: 67, column: 4 }, end: { line: 67, column: 39 } }, '12': { start: { line: 68, column: 4 }, end: { line: 68, column: 34 } }, '13': { start: { line: 72, column: 4 }, end: { line: 72, column: 25 } }, '14': { start: { line: 76, column: 4 }, end: { line: 76, column: 42 } }, '15': { start: { line: 84, column: 8 }, end: { line: 84, column: 18 } }, '16': { start: { line: 87, column: 8 }, end: { line: 87, column: 18 } }, '17': { start: { line: 88, column: 32 }, end: { line: 88, column: 47 } }, '18': { start: { line: 89, column: 34 }, end: { line: 89, column: 78 } }, '19': { start: { line: 90, column: 34 }, end: { line: 91, column: 36 } }, '20': { start: { line: 92, column: 24 }, end: { line: 92, column: 85 } }, '21': { start: { line: 93, column: 26 }, end: { line: 93, column: 89 } }, '22': { start: { line: 94, column: 26 }, end: { line: 94, column: 89 } }, '23': { start: { line: 96, column: 4 }, end: { line: 137, column: 6 } } }, fnMap: { '0': { name: 'noop', decl: { start: { line: 6, column: 9 }, end: { line: 6, column: 13 } }, loc: { start: { line: 6, column: 16 }, end: { line: 7, column: 1 } }, line: 6 }, '1': { name: 'generateOptions', decl: { start: { line: 9, column: 9 }, end: { line: 9, column: 24 } }, loc: { start: { line: 9, column: 71 }, end: { line: 17, column: 1 } }, line: 9 } }, branchMap: { '0': { loc: { start: { line: 12, column: 4 }, end: { line: 14, column: 5 } }, type: 'if', locations: [{ start: { line: 12, column: 4 }, end: { line: 14, column: 5 } }, { start: { line: 12, column: 4 }, end: { line: 14, column: 5 } }], line: 12 }, '1': { loc: { start: { line: 12, column: 8 }, end: { line: 12, column: 86 } }, type: 'binary-expr', locations: [{ start: { line: 12, column: 8 }, end: { line: 12, column: 24 } }, { start: { line: 12, column: 28 }, end: { line: 12, column: 62 } }, { start: { line: 12, column: 66 }, end: { line: 12, column: 86 } }], line: 12 }, '2': { loc: { start: { line: 59, column: 4 }, end: { line: 63, column: 5 } }, type: 'if', locations: [{ start: { line: 59, column: 4 }, end: { line: 63, column: 5 } }, { start: { line: 59, column: 4 }, end: { line: 63, column: 5 } }], line: 59 }, '3': { loc: { start: { line: 89, column: 50 }, end: { line: 89, column: 77 } }, type: 'cond-expr', locations: [{ start: { line: 89, column: 58 }, end: { line: 89, column: 70 } }, { start: { line: 89, column: 73 }, end: { line: 89, column: 77 } }], line: 89 }, '4': { loc: { start: { line: 90, column: 50 }, end: { line: 90, column: 77 } }, type: 'cond-expr', locations: [{ start: { line: 90, column: 58 }, end: { line: 90, column: 70 } }, { start: { line: 90, column: 73 }, end: { line: 90, column: 77 } }], line: 90 }, '5': { loc: { start: { line: 91, column: 6 }, end: { line: 91, column: 35 } }, type: 'cond-expr', locations: [{ start: { line: 91, column: 14 }, end: { line: 91, column: 28 } }, { start: { line: 91, column: 31 }, end: { line: 91, column: 35 } }], line: 91 } }, s: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0, '9': 0, '10': 0, '11': 0, '12': 0, '13': 0, '14': 0, '15': 0, '16': 0, '17': 0, '18': 0, '19': 0, '20': 0, '21': 0, '22': 0, '23': 0 }, f: { '0': 0, '1': 0 }, b: { '0': [0, 0], '1': [0, 0, 0], '2': [0, 0], '3': [0, 0], '4': [0, 0], '5': [0, 0] }, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_Header = require('./Header'); /* istanbul ignore next */var _Header2 = _interopRequireDefault(_Header);
var /* istanbul ignore next */_Combobox = require('./Combobox'); /* istanbul ignore next */var _Combobox2 = _interopRequireDefault(_Combobox);
var /* istanbul ignore next */_moment = require('moment'); /* istanbul ignore next */var _moment2 = _interopRequireDefault(_moment);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

function noop() {/* istanbul ignore next */++cov_2g1l5g4txa.f[0];
}

function generateOptions(length, disabledOptions, hideDisabledOptions) {/* istanbul ignore next */++cov_2g1l5g4txa.f[1];
  var arr = /* istanbul ignore next */(++cov_2g1l5g4txa.s[0], []); /* istanbul ignore next */++cov_2g1l5g4txa.s[1];
  for (var value = 0; value < length; value++) {/* istanbul ignore next */++cov_2g1l5g4txa.s[2];
    if ( /* istanbul ignore next */(++cov_2g1l5g4txa.b[1][0], !disabledOptions) || /* istanbul ignore next */(++cov_2g1l5g4txa.b[1][1], disabledOptions.indexOf(value) < 0) || /* istanbul ignore next */(++cov_2g1l5g4txa.b[1][2], !hideDisabledOptions)) {/* istanbul ignore next */++cov_2g1l5g4txa.b[0][0];++cov_2g1l5g4txa.s[3];
      arr.push(value);
    } else /* istanbul ignore next */{++cov_2g1l5g4txa.b[0][1];}
  } /* istanbul ignore next */++cov_2g1l5g4txa.s[4];
  return arr;
}

var Panel = /* istanbul ignore next */(++cov_2g1l5g4txa.s[5], /* istanbul ignore next */_react2.default.createClass({ /* istanbul ignore next */displayName: 'Panel',
  propTypes: {
    clearText: /* istanbul ignore next */_react.PropTypes.string,
    prefixCls: /* istanbul ignore next */_react.PropTypes.string,
    defaultOpenValue: /* istanbul ignore next */_react.PropTypes.object,
    value: /* istanbul ignore next */_react.PropTypes.object,
    placeholder: /* istanbul ignore next */_react.PropTypes.string,
    format: /* istanbul ignore next */_react.PropTypes.string,
    disabledHours: /* istanbul ignore next */_react.PropTypes.func,
    disabledMinutes: /* istanbul ignore next */_react.PropTypes.func,
    disabledSeconds: /* istanbul ignore next */_react.PropTypes.func,
    hideDisabledOptions: /* istanbul ignore next */_react.PropTypes.bool,
    onChange: /* istanbul ignore next */_react.PropTypes.func,
    onEsc: /* istanbul ignore next */_react.PropTypes.func,
    allowEmpty: /* istanbul ignore next */_react.PropTypes.bool,
    showHour: /* istanbul ignore next */_react.PropTypes.bool,
    showSecond: /* istanbul ignore next */_react.PropTypes.bool,
    onClear: /* istanbul ignore next */_react.PropTypes.func,
    showAMPM: /* istanbul ignore next */_react.PropTypes.bool,
    isGregorian: /* istanbul ignore next */_react.PropTypes.bool }, /* istanbul ignore next */


  getDefaultProps: function getDefaultProps() {/* istanbul ignore next */++cov_2g1l5g4txa.s[6];
    return {
      prefixCls: 'rc-time-picker-panel',
      onChange: noop,
      onClear: noop,
      defaultOpenValue: /* istanbul ignore next */(0, _moment2.default)() };

  }, /* istanbul ignore next */

  getInitialState: function getInitialState() {/* istanbul ignore next */++cov_2g1l5g4txa.s[7];
    return {
      value: this.props.value,
      selectionRange: [] };

  }, /* istanbul ignore next */

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    var value = /* istanbul ignore next */(++cov_2g1l5g4txa.s[8], nextProps.value); /* istanbul ignore next */++cov_2g1l5g4txa.s[9];
    if (value) {/* istanbul ignore next */++cov_2g1l5g4txa.b[2][0];++cov_2g1l5g4txa.s[10];
      this.setState({
        value: value });

    } else /* istanbul ignore next */{++cov_2g1l5g4txa.b[2][1];}
  }, /* istanbul ignore next */

  onChange: function onChange(newValue) {/* istanbul ignore next */++cov_2g1l5g4txa.s[11];
    this.setState({ value: newValue }); /* istanbul ignore next */++cov_2g1l5g4txa.s[12];
    this.props.onChange(newValue);
  }, /* istanbul ignore next */

  onClear: function onClear() {/* istanbul ignore next */++cov_2g1l5g4txa.s[13];
    this.props.onClear();
  }, /* istanbul ignore next */

  onCurrentSelectPanelChange: function onCurrentSelectPanelChange(currentSelectPanel) {/* istanbul ignore next */++cov_2g1l5g4txa.s[14];
    this.setState({ currentSelectPanel: currentSelectPanel });
  }, /* istanbul ignore next */

  render: function render() {/* istanbul ignore next */var _ref = (++cov_2g1l5g4txa.s[15],




    this.props),isGregorian = _ref.isGregorian,formatter = _ref.formatter,prefixCls = _ref.prefixCls,className = _ref.className,placeholder = _ref.placeholder,disabledHours = _ref.disabledHours,disabledMinutes = _ref.disabledMinutes,disabledSeconds = _ref.disabledSeconds,hideDisabledOptions = _ref.hideDisabledOptions,allowEmpty = _ref.allowEmpty,showHour = _ref.showHour,showSecond = _ref.showSecond,showAMPM = _ref.showAMPM,format = _ref.format,defaultOpenValue = _ref.defaultOpenValue,clearText = _ref.clearText,onEsc = _ref.onEsc; /* istanbul ignore next */var _ref2 = (++cov_2g1l5g4txa.s[16],


    this.state),value = _ref2.value,currentSelectPanel = _ref2.currentSelectPanel;
    var disabledHourOptions = /* istanbul ignore next */(++cov_2g1l5g4txa.s[17], disabledHours());
    var disabledMinuteOptions = /* istanbul ignore next */(++cov_2g1l5g4txa.s[18], disabledMinutes(value ? /* istanbul ignore next */(++cov_2g1l5g4txa.b[3][0], value.hour()) : /* istanbul ignore next */(++cov_2g1l5g4txa.b[3][1], null)));
    var disabledSecondOptions = /* istanbul ignore next */(++cov_2g1l5g4txa.s[19], disabledSeconds(value ? /* istanbul ignore next */(++cov_2g1l5g4txa.b[4][0], value.hour()) : /* istanbul ignore next */(++cov_2g1l5g4txa.b[4][1], null),
    value ? /* istanbul ignore next */(++cov_2g1l5g4txa.b[5][0], value.minute()) : /* istanbul ignore next */(++cov_2g1l5g4txa.b[5][1], null)));
    var hourOptions = /* istanbul ignore next */(++cov_2g1l5g4txa.s[20], generateOptions(24, disabledHourOptions, hideDisabledOptions));
    var minuteOptions = /* istanbul ignore next */(++cov_2g1l5g4txa.s[21], generateOptions(60, disabledMinuteOptions, hideDisabledOptions));
    var secondOptions = /* istanbul ignore next */(++cov_2g1l5g4txa.s[22], generateOptions(60, disabledSecondOptions, hideDisabledOptions)); /* istanbul ignore next */++cov_2g1l5g4txa.s[23];

    return (
      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: /* istanbul ignore next */prefixCls + '-inner ' + className },
        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Header2.default, /* istanbul ignore next */{
          clearText: clearText,
          prefixCls: prefixCls,
          defaultOpenValue: defaultOpenValue,
          value: value,
          currentSelectPanel: currentSelectPanel,
          onEsc: onEsc,
          format: format,
          placeholder: placeholder,
          hourOptions: hourOptions,
          minuteOptions: minuteOptions,
          secondOptions: secondOptions,
          disabledHours: disabledHours,
          disabledMinutes: disabledMinutes,
          disabledSeconds: disabledSeconds,
          onChange: this.onChange,
          onClear: this.onClear,
          allowEmpty: allowEmpty }),

        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Combobox2.default, /* istanbul ignore next */{
          isGregorian: isGregorian,
          formatter: formatter,
          prefixCls: prefixCls,
          value: value,
          defaultOpenValue: defaultOpenValue,
          format: format,
          onChange: this.onChange,
          showAMPM: showAMPM,
          showHour: showHour,
          showSecond: showSecond,
          hourOptions: hourOptions,
          minuteOptions: minuteOptions,
          secondOptions: secondOptions,
          disabledHours: disabledHours,
          disabledMinutes: disabledMinutes,
          disabledSeconds: disabledSeconds,
          onCurrentSelectPanelChange: this.onCurrentSelectPanelChange })));



  } })); /* istanbul ignore next */exports.default =


Panel;